{"ts":1379017439300,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1379017530067,"patch":[[{"diffs":[[1,"var testrunner = require(\"qunit\");\r\n\r\nDefaults: {\r\n    // logging options\r\n    log: {\r\n        // log assertions overview\r\n        assertions: true,\r\n        // log expected and actual values for failed tests\r\n        errors: true,\r\n        // log tests overview\r\n        tests: true,\r\n        // log summary\r\n        summary: true,\r\n        // log global summary (all files)\r\n        globalSummary: true,\r\n        // log currently testing code file\r\n        testing: true\r\n    },\r\n\r\n    // run test coverage tool\r\n    coverage: false,\r\n    // define dependencies, which are required then before code\r\n    deps: null,\r\n    // define namespace your code will be attached to on global['your namespace']\r\n    namespace: null\r\n}\r\n\r\n\r\n// change any option for all tests globally\r\ntestrunner.options.optionName = value;\r\n\r\n// or use setup function\r\ntestrunner.setup({\r\n    log: {\r\n        summary: true\r\n    }\r\n});\r\n\r\n\r\n// one code and tests file\r\ntestrunner.run({\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// require code into a namespace object, rather than globally\r\ntestrunner.run({\r\n    code: {path: \"/path/to/your/code.js\", namespace: \"code\"},\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// one code and multiple tests file\r\ntestrunner.run({\r\n    code: \"/path/to/your/code.js\",\r\n    tests: [\"/path/to/your/tests.js\", \"/path/to/your/tests1.js\"]\r\n}, callback);\r\n\r\n// array of code and test files\r\ntestrunner.run([\r\n    {\r\n        code: \"/path/to/your/code.js\",\r\n        tests: \"/path/to/your/tests.js\"\r\n    },\r\n    {\r\n        code: \"/path/to/your/code.js\",\r\n        tests: \"/path/to/your/tests.js\"\r\n    }\r\n], callback);\r\n\r\n// using testrunner callback\r\ntestrunner.run({\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, function(err, report) {\r\n    console.dir(report);\r\n});\r\n\r\n// specify dependency\r\ntestrunner.run({\r\n    deps: \"/path/to/your/dependency.js\",\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// dependencies can be modules or files\r\ntestrunner.run({\r\n    deps: \"modulename\",\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// dependencies can required into a namespace object\r\ntestrunner.run({\r\n    deps: {path: \"utilmodule\", namespace: \"utils\"},\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// specify multiple dependencies\r\ntestrunner.run({\r\n    deps: [\"/path/to/your/dependency1.js\", \"/path/to/your/dependency2.js\"],\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);"]],"start1":0,"start2":0,"length1":0,"length2":2640}]],"length":2640,"saved":false}
{"ts":1379017745336,"patch":[[{"diffs":[[0,": \"/"],[-1,"path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// require code into a namespace object, rather than globally\r\ntestrunner.run({\r\n    code: {path: \"/path/to/your/code.js\", namespace: \"code\"},\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// one code and multiple tests file\r\ntestrunner.run({\r\n    code: \"/path/to/your/code.js\",\r\n    tests: [\"/path/to/your/tests.js\", \"/path/to/your/tests1.js\"]\r\n}, callback);\r\n\r\n// array of code and test files\r\ntestrunner.run([\r\n    {\r\n        code: \"/path/to/your/code.js\",\r\n        tests: \"/path/to/your/tests.js\"\r\n    },\r\n    {\r\n        code: \"/path/to/your/code.js\",\r\n        tests: \"/path/to/your/tests.js\"\r\n    }\r\n], callback);\r\n\r\n// using testrunner callback\r\ntestrunner.run({\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, function(err, report) {\r\n    console.dir(report);\r\n});\r\n\r\n// specify dependency\r\ntestrunner.run({\r\n    deps: \"/path/to/your/dependency.js\",\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// dependencies can be modules or files\r\ntestrunner.run({\r\n    deps: \"modulename\",\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// dependencies can required into a namespace object\r\ntestrunner.run({\r\n    deps: {path: \"utilmodule\", namespace: \"utils\"},\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);\r\n\r\n// specify multiple dependencies\r\ntestrunner.run({\r\n    deps: [\"/path/to/your/dependency1.js\", \"/path/to/your/dependency2.js\"],\r\n    code: \"/path/to/your/code.js\",\r\n    tests: \"/path/to/your/tests.js\"\r\n}, callback);"],[1,"modules/geometryExtensions.js\",\r\n    tests: \"geometry.js\"\r\n}, callback);\r\n\r\n\r\n\r\n"]],"start1":968,"start2":968,"length1":1672,"length2":84}]],"length":1052,"saved":false}
{"ts":1379017915599,"patch":[[{"diffs":[[0,"ner.run("],[-1,"{"],[1,"["],[0,"\r\n "],[1,"   {"],[0,"   code:"]],"start1":949,"start2":949,"length1":20,"length2":24},{"diffs":[[0,"s.js\",\r\n"],[1,"    "],[0,"    test"]],"start1":1001,"start2":1001,"length1":16,"length2":20},{"diffs":[[0,"etry.js\""],[-1,"\r\n}"],[1," }\r\n        ]"],[0,", callba"]],"start1":1029,"start2":1029,"length1":19,"length2":29}]],"length":1070,"saved":false}
{"ts":1379017922536,"patch":[[{"diffs":[[0,"try.js\" "],[1,"\r\n    "],[0,"}\r\n     "]],"start1":1030,"start2":1030,"length1":16,"length2":22}]],"length":1076,"saved":false}
{"ts":1379017931680,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"        "],[0,"], callb"]],"start1":1039,"start2":1039,"length1":24,"length2":16}]],"length":1068,"saved":false}
{"ts":1379017934541,"patch":[[{"diffs":[[0,"    {   "],[1,"\r\n        "],[0,"code: \"/"]],"start1":960,"start2":960,"length1":16,"length2":26}]],"length":1078,"saved":false}
{"ts":1379017970381,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"\r\n// change any option for all tests globally\r\ntestrunner.options.optionName = value;\r\n\r\n"],[0,"// o"]],"start1":724,"start2":724,"length1":97,"length2":8}]],"length":989,"saved":false}
{"ts":1379018009566,"patch":[[{"diffs":[[0,"Defaults"],[-1,":"],[1," = "],[0," {\r\n    "]],"start1":38,"start2":38,"length1":17,"length2":19}]],"length":991,"saved":false}
{"ts":1379018010463,"patch":[[{"diffs":[[0,"faults ="],[-1," "],[0," {\r\n    "]],"start1":40,"start2":40,"length1":17,"length2":16}]],"length":990,"saved":false}
{"ts":1379018017654,"patch":[[{"diffs":[[0," null\r\n}"],[1,";"],[0,"\r\n\r\n// o"]],"start1":717,"start2":717,"length1":16,"length2":17}]],"length":991,"saved":false}
{"ts":1379018046768,"patch":[[{"diffs":[[0,"ck);"],[-1,"\r\n\r\n\r\n\r\n"]],"start1":979,"start2":979,"length1":12,"length2":4}]],"length":983,"saved":false}
{"ts":1379018177537,"patch":[[{"diffs":[[0,"}\r\n]"],[-1,", callback"],[0,");"]],"start1":967,"start2":967,"length1":16,"length2":6}]],"length":973,"saved":false}
