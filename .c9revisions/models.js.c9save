{"ts":1378928163925,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var MongoClient = require('mongodb').MongoClient;\nvar format = require('util').format;\n\nfunction printMongoCollection() {\n\tMongoClient.connect('mongodb://intelli-place:Asdf1234@ds041168.mongolab.com:41168/intelli-place', function(err, db) {\n\t\tif(err) throw err;\n\n\t\tvar collection = db.collection('workspaces');\n\t\t  // Locate all the entries using find\n\t\tcollection.findOne({'_id': 'miromiroslavov'}, function(err, result) {\n\t\t\tconsole.log(result);\n\t\t\t// Let's close the db\n\t\t\tdb.close();\t\t\n\t\t});\n\t});\n}\n\nexports.printMongoCollection = printMongoCollection\n\nexports.getWorkspaces = function(callback) {\n\tMongoClient.connect('mongodb://intelli-place:Asdf1234@ds041168.mongolab.com:41168/intelli-place', function(err, db) {\n\t\tif(err) throw err;\n\n\t\tvar collection = db.collection('workspaces');\n\t\t// Locate all the entries using find\n\t\tcollection.find().toArray(function(err, items) {\n\t\t\tif(err) throw err;\n\t\t\n\t\t\tcallback(items);\n\t\t\t// Let's close the db\n\t\t\tdb.close();\t\t\n\t\t});\n\t});\n}\n\nvar createWorkspace = function(json) {\n\tvar result = new Object();\n\tresult.name = json.name;\n\tresult.offices = [];\n\tresult.toString = function() {\n\t\treturn result.name + ', []';\n\t}\n\treturn result;\n}\n\nvar workspace = {\n    \"_id\": \"miromiroslavov\",\n    \"name\": \"Sofia Valley\",\n    \"offices\": [\n        {\n            \"name\": \"HQ1\",\n            \"rooms\": [\n                {\n                    \"name\": \"101\",\n                    \"boundary\": \"m0,0 L0,500 L500,500 L500,0z\",\n                    \"position\": \"100 100\",\n                    \"artifacts\": [\n                        {\n                            \"type\": \"air-conditioner\",\n                            \"position\": \"50 50\",\n                            \"boundary\": \"m0,0 L0,50 L50,50 L50,0z\",\n                            \"obstacle\": false\n                        },\n                        {\n                            \"type\": \"column\",\n                            \"position\": \"300 150\",\n                            \"boundary\": \"m0,0 L0,50 L50,50 L50,0z\",\n                            \"obstacle\": true\n                        }\n                    ],\n                    \"arrangements\": [\n                        {\n                            \"name\": \"plan1\",\n                            \"objects\": [\n                                {\n                                    \"type\": \"desk\",\n                                    \"name\": \"Miro's desk\",\n                                    \"position\": \"400 250\",\n                                    \"boundary\": \"m0,0 L0,50 L50,50 L50,0z\"\n                                },\n                                {\n                                    \"type\": \"chair\",\n                                    \"name\": \"Miro's chair\",\n                                    \"position\": \"412.5 300\",\n                                    \"boundary\": \"m0,0 L0,25 L25,25 L25,0z\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n};\n\nvar office = workspace.offices[0];\n\nvar room = office.rooms[0];\n\nconsole.log(room);\n\nvar ext = require('./geometryExtensions');\nvar g = require('geometry');\nvar p = new ext.Polygon([new g.Point(0, 0), new g.Point(0, 10), new g.Point(10, 10), new g.Point(10, 0)]);\nconsole.log(p);\nconsole.log(p.perimeter());\nconsole.log(p.area());\nconsole.log(g.Point.parse('10.5,20'));\nconsole.log(ext.Polygon.parse('0,0 10,0 10,10 0,10').area());\n// var parser = require('./svgPathGrammer').pathParser;\n\n// var p = parser.parse('m0,0 L0,500 L500,500 L500,0z');\n// console.dir(p);\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":3574}]],"length":3574}
{"contributors":[],"silentsave":false,"ts":1378928179296,"patch":[[{"diffs":[[0,"aces');\n"],[-1,"\t\t"],[1,"      "],[0,"  // Loc"]],"start1":303,"start2":303,"length1":18,"length2":22}]],"length":3578,"saved":false}
{"ts":1378928231612,"patch":[[{"diffs":[[0,"t = "],[-1,"new Object();\n\tresult."],[1,"{\n        "],[0,"name"],[-1," ="],[1,":"],[0," jso"]],"start1":1035,"start2":1035,"length1":36,"length2":23},{"diffs":[[0,"name"],[-1,";\n\tresult."],[1,",\n        "],[0,"offices"],[-1," ="],[1,":"],[0," []"],[1,"\n\t}"],[0,";\n\tr"]],"start1":1060,"start2":1060,"length1":30,"length2":32}]],"length":3567,"saved":false}
{"ts":1378928252888,"patch":[[{"diffs":[[0,": []"],[-1,"\n\t};\n\tresult."],[1,",\n        "],[0,"toSt"]],"start1":1081,"start2":1081,"length1":21,"length2":18},{"diffs":[[0,"n() {\n\t\t"],[1,"    "],[0,"return r"]],"start1":1113,"start2":1113,"length1":16,"length2":20},{"diffs":[[0,", []';\n\t"],[-1,"}"],[1,"    }\n\t};\n\tresult."],[0,"\n\treturn"]],"start1":1147,"start2":1147,"length1":17,"length2":34}]],"length":3585,"saved":false}
{"ts":1378928281922,"patch":[[{"diffs":[[0," {\n\t"],[-1,"var result ="],[1,"return"],[0," {\n "]],"start1":1022,"start2":1022,"length1":20,"length2":14},{"diffs":[[0,"toString"],[-1," ="],[1,":"],[0," functio"]],"start1":1089,"start2":1089,"length1":18,"length2":17},{"diffs":[[0,") {\n"],[-1,"\t\t"],[1,"      "],[0,"    "],[1,"  "],[0,"retu"]],"start1":1108,"start2":1108,"length1":14,"length2":20},{"diffs":[[0,"', []';\n"],[-1,"\t"],[1,"    "],[0,"    }\n\t}"]],"start1":1145,"start2":1145,"length1":17,"length2":20},{"diffs":[[0,"\t};\n"],[-1,"\tresult.\n\treturn result;\n"],[0,"}\n\nv"]],"start1":1163,"start2":1163,"length1":33,"length2":8}]],"length":3562,"saved":false}
{"ts":1378928289693,"patch":[[{"diffs":[[0," return "],[-1,"result"],[1,"this"],[0,".name + "]],"start1":1123,"start2":1123,"length1":22,"length2":20}]],"length":3560,"saved":false}
{"ts":1378928303580,"patch":[[{"diffs":[[0,"\treturn "],[1,"Class.extend("],[0,"{\n      "]],"start1":1025,"start2":1025,"length1":16,"length2":29},{"diffs":[[0,"    }\n\t}"],[1,")"],[0,";\n}\n\nvar"]],"start1":1168,"start2":1168,"length1":16,"length2":17}]],"length":3574,"saved":false}
{"ts":1378928323825,"patch":[[{"diffs":[[0,"ormat;\n\n"],[1,"var Class = require('./oop').Class;\n\n"],[0,"function"]],"start1":80,"start2":80,"length1":16,"length2":53}]],"length":3611,"saved":false}
{"ts":1378928335349,"patch":[[{"diffs":[[0,"uire('./"],[1,"modules/"],[0,"oop').Cl"]],"start1":103,"start2":103,"length1":16,"length2":24}]],"length":3619,"saved":false}
{"ts":1378928344089,"patch":[[{"diffs":[[0,"(p);"],[-1,"\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],"start1":3601,"start2":3601,"length1":18,"length2":4}]],"length":3605,"saved":false}
{"ts":1378928361305,"patch":[[{"diffs":[[0,"uire('./"],[1,"modules/"],[0,"geometry"]],"start1":3139,"start2":3139,"length1":16,"length2":24}]],"length":3613,"saved":false}
