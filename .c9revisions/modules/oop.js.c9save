{"ts":1378928065051,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1378928094823,"patch":[[{"diffs":[[1,"(function() {\n\tvar Class = {\n\t\textend: function(proto) {\n\t\t\tvar base = function() {},\n\t\t\t\tmember,\n\t\t\t\tthat = this,\n\t\t\t\tsubclass = proto && proto.init ? proto.init : function () {\n\t\t\t\t\tthat.apply(this, arguments);\n\t\t\t\t},\n\t\t\t\tfn;\n\n\t\t\tbase.prototype = that.prototype;\n\t\t\tfn = subclass.fn = subclass.prototype = new base();\n\n\t\t\tfor (member in proto) {\n\t\t\t\tif (typeof proto[member] === Object && !(proto[member] instanceof Array) && proto[member] !== null) {\n\t\t\t\t\t// Merge object members\n\t\t\t\t\tfn[member] = extend(true, {}, base.prototype[member], proto[member]);\n\t\t\t\t} else {\n\t\t\t\t\tfn[member] = proto[member];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfn.constructor = subclass;\n\t\t\tsubclass.extend = that.extend;\n\n\t\t\treturn subclass;\n\t\t}\n\t};\n})();"]],"start1":0,"start2":0,"length1":0,"length2":714}]],"length":714,"saved":false}
{"ts":1378928108820,"patch":[[{"diffs":[[0,"on() {\n\t"],[-1,"var "],[1,"exports."],[0,"Class = "]],"start1":7,"start2":7,"length1":20,"length2":24}]],"length":718,"saved":false}
